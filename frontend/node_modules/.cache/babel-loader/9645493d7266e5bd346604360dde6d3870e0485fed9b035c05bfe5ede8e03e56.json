{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  // State for login/signup credentials\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [newPassword, setNewPassword] = useState(''); // New state for password reset\n  const [confirmNewPassword, setConfirmNewPassword] = useState(''); // New state for confirmation\n  // State for additional sign-up fields\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n\n  // UI State\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [isForgotPassword, setIsForgotPassword] = useState(false); // NEW STATE\n  const [error, setError] = useState('');\n\n  // Utility function to clear all form fields\n  const clearForm = () => {\n    setUsername('');\n    setPassword('');\n    setNewPassword('');\n    setConfirmNewPassword('');\n    setFullName('');\n    setEmail('');\n    setError('');\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    const apiUrl = 'http://127.0.0.1:5000';\n    const url = isSignUp ? `${apiUrl}/signup` : `${apiUrl}/login`;\n    const body = isSignUp ? JSON.stringify({\n      username,\n      password,\n      full_name: fullName,\n      email\n    }) : JSON.stringify({\n      username,\n      password\n    });\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: body\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Authentication failed.');\n      }\n      if (isSignUp) {\n        setError('Sign-up successful! Please log in now.');\n        clearForm();\n        setIsSignUp(false);\n      } else if (data.session_token) {\n        onLogin(username, data.session_token);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // NEW FUNCTION: Handle Password Reset Submission\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setError('');\n    if (newPassword !== confirmNewPassword) {\n      setError(\"New password and confirmation do not match.\");\n      return;\n    }\n    if (newPassword.length < 8) {\n      // Basic password strength check\n      setError(\"New password must be at least 8 characters long.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:5000/reset_password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          new_password: newPassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to reset password.');\n      }\n      setError('Password successfully reset! Please log in with your new password.');\n      clearForm();\n      setIsForgotPassword(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleToggleAuth = () => {\n    clearForm();\n    setIsSignUp(!isSignUp);\n    setIsForgotPassword(false); // Ensure password reset is off\n  };\n  const handleForgotPasswordClick = () => {\n    clearForm();\n    setIsForgotPassword(true);\n    setIsSignUp(false);\n  };\n\n  // Function to handle the custom success class for styling\n  const getErrorClass = () => {\n    if (!error) return '';\n    return error.includes('successful') || error.includes('reset') ? 'login-success' : 'login-error';\n  };\n\n  // --- Conditional Rendering ---\n  const renderForm = () => {\n    if (isForgotPassword) {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordReset,\n        className: \"login-form\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          className: \"login-input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          autoComplete: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password (min 8 chars)\",\n          className: \"login-input\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          className: \"login-input\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value),\n          required: true,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getErrorClass(),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            clearForm();\n            setIsForgotPassword(false);\n          },\n          className: \"toggle-auth-button\",\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this);\n    }\n\n    // --- Log In / Sign Up Form ---\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      className: \"login-form\",\n      autoComplete: \"off\",\n      children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          className: \"login-input\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true,\n          autoComplete: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          className: \"login-input\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"login-input\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"login-input\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), !isSignUp && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleForgotPasswordClick,\n        className: \"forgot-password-button\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getErrorClass(),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        disabled: !username.trim() || !password.trim() || isSignUp && (!fullName.trim() || !email.trim()),\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: isForgotPassword ? 'Reset Password' : isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), renderForm(), !isForgotPassword && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleAuth,\n        className: \"toggle-auth-button\",\n        children: isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"eD9pGousB7/Bj4al+J3vXygy31I=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onLogin","_s","username","setUsername","password","setPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","fullName","setFullName","email","setEmail","isSignUp","setIsSignUp","isForgotPassword","setIsForgotPassword","error","setError","clearForm","handleAuth","e","preventDefault","apiUrl","url","body","JSON","stringify","full_name","response","fetch","method","headers","data","json","ok","Error","session_token","err","message","handlePasswordReset","length","new_password","handleToggleAuth","handleForgotPasswordClick","getErrorClass","includes","renderForm","onSubmit","className","autoComplete","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    // State for login/signup credentials\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState(''); // New state for password reset\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(''); // New state for confirmation\r\n    // State for additional sign-up fields\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    \r\n    // UI State\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [isForgotPassword, setIsForgotPassword] = useState(false); // NEW STATE\r\n    const [error, setError] = useState('');\r\n\r\n    // Utility function to clear all form fields\r\n    const clearForm = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n        setNewPassword('');\r\n        setConfirmNewPassword('');\r\n        setFullName('');\r\n        setEmail('');\r\n        setError('');\r\n    }\r\n\r\n    const handleAuth = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        const apiUrl = 'http://127.0.0.1:5000';\r\n        const url = isSignUp ? `${apiUrl}/signup` : `${apiUrl}/login`;\r\n\r\n        const body = isSignUp \r\n            ? JSON.stringify({ username, password, full_name: fullName, email }) \r\n            : JSON.stringify({ username, password });\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: body,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            if (isSignUp) {\r\n                setError('Sign-up successful! Please log in now.');\r\n                clearForm();\r\n                setIsSignUp(false);\r\n            } else if (data.session_token) {\r\n                onLogin(username, data.session_token);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // NEW FUNCTION: Handle Password Reset Submission\r\n    const handlePasswordReset = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (newPassword !== confirmNewPassword) {\r\n            setError(\"New password and confirmation do not match.\");\r\n            return;\r\n        }\r\n\r\n        if (newPassword.length < 8) { // Basic password strength check\r\n             setError(\"New password must be at least 8 characters long.\");\r\n             return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/reset_password', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, new_password: newPassword }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to reset password.');\r\n            }\r\n\r\n            setError('Password successfully reset! Please log in with your new password.');\r\n            clearForm();\r\n            setIsForgotPassword(false);\r\n            \r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    const handleToggleAuth = () => {\r\n        clearForm();\r\n        setIsSignUp(!isSignUp);\r\n        setIsForgotPassword(false); // Ensure password reset is off\r\n    }\r\n\r\n    const handleForgotPasswordClick = () => {\r\n        clearForm();\r\n        setIsForgotPassword(true);\r\n        setIsSignUp(false);\r\n    }\r\n    \r\n    // Function to handle the custom success class for styling\r\n    const getErrorClass = () => {\r\n        if (!error) return '';\r\n        return error.includes('successful') || error.includes('reset') ? 'login-success' : 'login-error';\r\n    }\r\n\r\n    // --- Conditional Rendering ---\r\n    const renderForm = () => {\r\n        if (isForgotPassword) {\r\n            return (\r\n                <form onSubmit={handlePasswordReset} className=\"login-form\" autoComplete=\"off\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        className=\"login-input\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                        autoComplete=\"username\" \r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"New Password (min 8 chars)\"\r\n                        className=\"login-input\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        required\r\n                        autoComplete=\"new-password\" \r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm New Password\"\r\n                        className=\"login-input\"\r\n                        value={confirmNewPassword}\r\n                        onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                        required\r\n                        autoComplete=\"new-password\" \r\n                    />\r\n                    {error && <div className={getErrorClass()}>{error}</div>}\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        Reset Password\r\n                    </button>\r\n                    <button \r\n                        type=\"button\" \r\n                        onClick={() => { clearForm(); setIsForgotPassword(false); }} \r\n                        className=\"toggle-auth-button\"\r\n                    >\r\n                        Back to Login\r\n                    </button>\r\n                </form>\r\n            );\r\n        }\r\n\r\n        // --- Log In / Sign Up Form ---\r\n        return (\r\n            <form onSubmit={handleAuth} className=\"login-form\" autoComplete=\"off\">\r\n                \r\n                {/* Sign Up Specific Fields */}\r\n                {isSignUp && (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                            className=\"login-input\"\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                            required\r\n                            autoComplete=\"name\"\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"login-input\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            autoComplete=\"email\"\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {/* Common Fields */}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    className=\"login-input\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"login-input\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    autoComplete=\"current-password\"\r\n                />\r\n                \r\n                {/* Forgot Password Button */}\r\n                {!isSignUp && (\r\n                    <button type=\"button\" onClick={handleForgotPasswordClick} className=\"forgot-password-button\">\r\n                        Forgot Password?\r\n                    </button>\r\n                )}\r\n                \r\n                {error && <div className={getErrorClass()}>{error}</div>}\r\n                \r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"login-button\"\r\n                    disabled={!username.trim() || !password.trim() || (isSignUp && (!fullName.trim() || !email.trim()))}\r\n                >\r\n                    {isSignUp ? 'Sign Up' : 'Log In'}\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <h2 className=\"login-title\">\r\n                    {isForgotPassword ? 'Reset Password' : isSignUp ? 'Sign Up' : 'Log In'}\r\n                </h2>\r\n                {renderForm()}\r\n                \r\n                {/* Toggle button only visible on Login/Signup view */}\r\n                {!isForgotPassword && (\r\n                    <button\r\n                        onClick={handleToggleAuth}\r\n                        className=\"toggle-auth-button\"\r\n                    >\r\n                        {isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}