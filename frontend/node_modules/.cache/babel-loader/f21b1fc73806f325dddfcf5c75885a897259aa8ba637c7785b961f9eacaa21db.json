{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// This is a conceptual example of how your App.jsx should handle the views\n\nimport React, { useState } from 'react';\nimport Login from './Login/Login';\nimport ChatPage from './ChatPage/ChatPage';\nimport PasswordReset from './PasswordReset/PasswordReset'; // NEW IMPORT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIEW_STATES = {\n  LOGIN: 'login',\n  CHAT: 'chat',\n  RESET: 'reset' // NEW STATE\n};\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [sessionToken, setSessionToken] = useState(null);\n  const [currentView, setCurrentView] = useState(VIEW_STATES.LOGIN); // Start at login\n\n  const handleLogin = (username, token) => {\n    setUser(username);\n    setSessionToken(token);\n    setCurrentView(VIEW_STATES.CHAT);\n  };\n  const handleSignOut = () => {\n    setUser(null);\n    setSessionToken(null);\n    setCurrentView(VIEW_STATES.LOGIN);\n  };\n  const handleForgotPasswordClick = () => {\n    // NEW HANDLER\n    setCurrentView(VIEW_STATES.RESET);\n  };\n  const handleBackToLogin = () => {\n    // NEW HANDLER\n    setCurrentView(VIEW_STATES.LOGIN);\n  };\n  const renderView = () => {\n    if (currentView === VIEW_STATES.CHAT && user && sessionToken) {\n      return /*#__PURE__*/_jsxDEV(ChatPage, {\n        user: user,\n        sessionToken: sessionToken,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    }\n    if (currentView === VIEW_STATES.RESET) {\n      // Render Password Reset\n      return /*#__PURE__*/_jsxDEV(PasswordReset, {\n        onBackToLogin: handleBackToLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onForgotPasswordClick: handleForgotPasswordClick // Pass the new handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: renderView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"g9dCB4qWblqjF/rd+fq3bvhTS0s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","ChatPage","PasswordReset","jsxDEV","_jsxDEV","VIEW_STATES","LOGIN","CHAT","RESET","App","_s","user","setUser","sessionToken","setSessionToken","currentView","setCurrentView","handleLogin","username","token","handleSignOut","handleForgotPasswordClick","handleBackToLogin","renderView","onSignOut","fileName","_jsxFileName","lineNumber","columnNumber","onBackToLogin","onLogin","onForgotPasswordClick","className","children","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/App.jsx"],"sourcesContent":["// This is a conceptual example of how your App.jsx should handle the views\r\n\r\nimport React, { useState } from 'react';\r\nimport Login from './Login/Login';\r\nimport ChatPage from './ChatPage/ChatPage';\r\nimport PasswordReset from './PasswordReset/PasswordReset'; // NEW IMPORT\r\n\r\nconst VIEW_STATES = {\r\n    LOGIN: 'login',\r\n    CHAT: 'chat',\r\n    RESET: 'reset' // NEW STATE\r\n};\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [sessionToken, setSessionToken] = useState(null);\r\n    const [currentView, setCurrentView] = useState(VIEW_STATES.LOGIN); // Start at login\r\n\r\n    const handleLogin = (username, token) => {\r\n        setUser(username);\r\n        setSessionToken(token);\r\n        setCurrentView(VIEW_STATES.CHAT);\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        setUser(null);\r\n        setSessionToken(null);\r\n        setCurrentView(VIEW_STATES.LOGIN);\r\n    };\r\n\r\n    const handleForgotPasswordClick = () => { // NEW HANDLER\r\n        setCurrentView(VIEW_STATES.RESET);\r\n    };\r\n    \r\n    const handleBackToLogin = () => { // NEW HANDLER\r\n        setCurrentView(VIEW_STATES.LOGIN);\r\n    };\r\n\r\n    const renderView = () => {\r\n        if (currentView === VIEW_STATES.CHAT && user && sessionToken) {\r\n            return <ChatPage \r\n                        user={user} \r\n                        sessionToken={sessionToken} \r\n                        onSignOut={handleSignOut} \r\n                   />;\r\n        }\r\n        \r\n        if (currentView === VIEW_STATES.RESET) { // Render Password Reset\r\n            return <PasswordReset \r\n                        onBackToLogin={handleBackToLogin} \r\n                   />;\r\n        }\r\n\r\n        return <Login \r\n                    onLogin={handleLogin} \r\n                    onForgotPasswordClick={handleForgotPasswordClick} // Pass the new handler\r\n                />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {renderView()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,aAAa,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO,CAAC;AACnB,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACM,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC;;EAEnE,MAAMW,WAAW,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IACrCP,OAAO,CAACM,QAAQ,CAAC;IACjBJ,eAAe,CAACK,KAAK,CAAC;IACtBH,cAAc,CAACX,WAAW,CAACE,IAAI,CAAC;EACpC,CAAC;EAED,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxBR,OAAO,CAAC,IAAI,CAAC;IACbE,eAAe,CAAC,IAAI,CAAC;IACrBE,cAAc,CAACX,WAAW,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMe,yBAAyB,GAAGA,CAAA,KAAM;IAAE;IACtCL,cAAc,CAACX,WAAW,CAACG,KAAK,CAAC;EACrC,CAAC;EAED,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAAE;IAC9BN,cAAc,CAACX,WAAW,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIR,WAAW,KAAKV,WAAW,CAACE,IAAI,IAAII,IAAI,IAAIE,YAAY,EAAE;MAC1D,oBAAOT,OAAA,CAACH,QAAQ;QACJU,IAAI,EAAEA,IAAK;QACXE,YAAY,EAAEA,YAAa;QAC3BW,SAAS,EAAEJ;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IACb;IAEA,IAAIb,WAAW,KAAKV,WAAW,CAACG,KAAK,EAAE;MAAE;MACrC,oBAAOJ,OAAA,CAACF,aAAa;QACT2B,aAAa,EAAEP;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IACb;IAEA,oBAAOxB,OAAA,CAACJ,KAAK;MACD8B,OAAO,EAAEb,WAAY;MACrBc,qBAAqB,EAAEV,yBAA0B,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EACd,CAAC;EAED,oBACIxB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfV,UAAU,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAnDID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}