{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\Signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SignupView from './SignupView';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000';\nconst Signup = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    full_name: '',\n    email: '',\n    phone_number: '',\n    country: ''\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Validation\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n    if (formData.password.length < 6) {\n      setError(\"Password must be at least 6 characters long.\");\n      return;\n    }\n    if (!formData.username || !formData.full_name || !formData.email || !formData.phone_number || !formData.country) {\n      setError(\"All fields are required.\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password,\n          full_name: formData.full_name,\n          email: formData.email,\n          phone_number: formData.phone_number,\n          country: formData.country\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Sign-up failed.');\n      }\n\n      // Success - redirect to login with success message\n      navigate('/login', {\n        state: {\n          message: 'Sign-up successful! Please log in.'\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Pass all data and handlers to the view component\n  const viewProps = {\n    formData,\n    error,\n    isLoading,\n    handleChange,\n    handleSubmit\n  };\n  return /*#__PURE__*/_jsxDEV(SignupView, {\n    ...viewProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n};\n_s(Signup, \"hA0DBoPH+6v+c1x950Wo1xqWWts=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","SignupView","jsxDEV","_jsxDEV","API_BASE_URL","Signup","onLogin","_s","formData","setFormData","username","password","confirmPassword","full_name","email","phone_number","country","error","setError","isLoading","setIsLoading","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","state","message","err","viewProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/Signup/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SignupView from './SignupView';\r\nimport './Signup.css';\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:5000';\r\n\r\nconst Signup = ({ onLogin }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        full_name: '',\r\n        email: '',\r\n        phone_number: '',\r\n        country: ''\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        // Validation\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError(\"Passwords don't match.\");\r\n            return;\r\n        }\r\n\r\n        if (formData.password.length < 6) {\r\n            setError(\"Password must be at least 6 characters long.\");\r\n            return;\r\n        }\r\n\r\n        if (!formData.username || !formData.full_name || !formData.email || !formData.phone_number || !formData.country) {\r\n            setError(\"All fields are required.\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/signup`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: formData.username,\r\n                    password: formData.password,\r\n                    full_name: formData.full_name,\r\n                    email: formData.email,\r\n                    phone_number: formData.phone_number,\r\n                    country: formData.country\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Sign-up failed.');\r\n            }\r\n\r\n            // Success - redirect to login with success message\r\n            navigate('/login', { \r\n                state: { \r\n                    message: 'Sign-up successful! Please log in.' \r\n                } \r\n            });\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Pass all data and handlers to the view component\r\n    const viewProps = {\r\n        formData,\r\n        error,\r\n        isLoading,\r\n        handleChange,\r\n        handleSubmit\r\n    };\r\n\r\n    return <SignupView {...viewProps} />;\r\n};\r\n\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}