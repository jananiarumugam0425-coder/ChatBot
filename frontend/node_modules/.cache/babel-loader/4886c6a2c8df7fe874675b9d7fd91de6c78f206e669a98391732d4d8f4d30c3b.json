{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\ChatPage\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChatPage.css';\nimport ChatMessage from '../ChatMessage/ChatMessage'; // Assuming standard chat components\nimport UploadButton from '../UploadButton/UploadButton'; // New import for the upload button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  user,\n  sessionToken,\n  onSignOut\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Added loading state\n\n  // --- History Fetch (Corrected to use Authorization Header) ---\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/chat_history', {\n          headers: {\n            'Authorization': `Bearer ${sessionToken}` // CRITICAL: Use header for protected route\n          }\n        });\n        if (!response.ok) {\n          // Log out user if token is invalid/expired\n          if (response.status === 401) {\n            onSignOut();\n            throw new Error('Session expired. Please log in.');\n          }\n          throw new Error('Failed to fetch chat history.');\n        }\n        const data = await response.json();\n        setMessages(data.history || []);\n      } catch (err) {\n        console.error(\"Failed to fetch chat history:\", err);\n      }\n    };\n    fetchChatHistory();\n    const intervalId = setInterval(fetchChatHistory, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, [sessionToken, onSignOut]);\n\n  // --- Handle Chat Message ---\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const query = input.trim();\n    if (!query || isLoading) return;\n    setIsLoading(true);\n    const newMessage = {\n      sender: 'user',\n      text: query,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput(''); // Clear input immediately\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${sessionToken}` // CRITICAL: Header for chat\n        },\n        body: JSON.stringify({\n          query: query,\n          timestamp: newMessage.timestamp\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get chat response.');\n      }\n      const botMessage = {\n        sender: 'bot',\n        text: data.answer,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (err) {\n      console.error(\"Chat Error:\", err);\n      const errorMessage = {\n        sender: 'bot',\n        text: `Error: ${err.message}`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- CRITICAL FIX: Handle File Upload ---\n  const handleFileUpload = async file => {\n    if (!file || isLoading) return;\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    const tempMessage = {\n      sender: 'bot',\n      text: `Uploading **${file.name}**... Please wait.`,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prevMessages => [...prevMessages, tempMessage]);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        // CRITICAL FIX: Authorization header included for file upload\n        headers: {\n          'Authorization': `Bearer ${sessionToken}`\n          // DO NOT set Content-Type: multipart/form-data. Browser handles it.\n        },\n        body: formData\n      });\n      const data = await response.json();\n\n      // Remove the temporary message\n      setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\n      if (!response.ok) {\n        // If authentication fails (401), the error message comes back as JSON\n        throw new Error(data.error || 'File upload failed with an unknown error.');\n      }\n\n      // Add the final success message from the backend (data.message)\n      const successMessage = {\n        sender: 'bot',\n        text: data.message,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, successMessage]);\n    } catch (err) {\n      console.error(\"Upload Error:\", err);\n\n      // Remove the temporary message\n      setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\n      const errorMessage = {\n        sender: 'bot',\n        text: `Error uploading file: ${err.message}`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold\",\n          children: [\"TimeSheet AI Chat (\", user, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSignOut,\n          className: \"sign-out-button\",\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, index) =>\n        /*#__PURE__*/\n        // Use ChatMessage component for better display\n        _jsxDEV(ChatMessage, {\n          sender: msg.sender,\n          text: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n          onFileUpload: handleFileUpload,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: isLoading ? \"Please wait...\" : \"Ask a question about the timesheet...\",\n          className: \"chat-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: isLoading,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: \"2\",\n            stroke: \"currentColor\",\n            className: \"send-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"Dols53md6CtEh2XZjnyVTzd0hnE=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","ChatMessage","UploadButton","jsxDEV","_jsxDEV","ChatPage","user","sessionToken","onSignOut","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","fetchChatHistory","response","fetch","headers","ok","status","Error","data","json","history","err","console","error","intervalId","setInterval","clearInterval","handleSendMessage","e","preventDefault","query","trim","newMessage","sender","text","timestamp","Date","toISOString","prevMessages","method","body","JSON","stringify","botMessage","answer","errorMessage","message","handleFileUpload","file","formData","FormData","append","tempMessage","name","filter","msg","successMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","onSubmit","onFileUpload","disabled","type","placeholder","value","onChange","target","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ChatPage.css';\r\nimport ChatMessage from '../ChatMessage/ChatMessage'; // Assuming standard chat components\r\nimport UploadButton from '../UploadButton/UploadButton'; // New import for the upload button\r\n\r\nconst ChatPage = ({ user, sessionToken, onSignOut }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false); // Added loading state\r\n\r\n    // --- History Fetch (Corrected to use Authorization Header) ---\r\n    useEffect(() => {\r\n        const fetchChatHistory = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:5000/chat_history', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${sessionToken}`, // CRITICAL: Use header for protected route\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    // Log out user if token is invalid/expired\r\n                    if (response.status === 401) {\r\n                        onSignOut();\r\n                        throw new Error('Session expired. Please log in.');\r\n                    }\r\n                    throw new Error('Failed to fetch chat history.');\r\n                }\r\n                const data = await response.json();\r\n                setMessages(data.history || []);\r\n            } catch (err) {\r\n                console.error(\"Failed to fetch chat history:\", err);\r\n            }\r\n        };\r\n\r\n        fetchChatHistory();\r\n        const intervalId = setInterval(fetchChatHistory, 5000); // Poll every 5 seconds\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [sessionToken, onSignOut]);\r\n\r\n    // --- Handle Chat Message ---\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const query = input.trim();\r\n        if (!query || isLoading) return;\r\n\r\n        setIsLoading(true);\r\n        const newMessage = {\r\n            sender: 'user',\r\n            text: query,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, newMessage]);\r\n        setInput(''); // Clear input immediately\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${sessionToken}`, // CRITICAL: Header for chat\r\n                },\r\n                body: JSON.stringify({ query: query, timestamp: newMessage.timestamp }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to get chat response.');\r\n            }\r\n\r\n            const botMessage = {\r\n                sender: 'bot',\r\n                text: data.answer,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n        } catch (err) {\r\n            console.error(\"Chat Error:\", err);\r\n            const errorMessage = {\r\n                sender: 'bot',\r\n                text: `Error: ${err.message}`,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    // --- CRITICAL FIX: Handle File Upload ---\r\n    const handleFileUpload = async (file) => {\r\n        if (!file || isLoading) return;\r\n\r\n        setIsLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        const tempMessage = {\r\n            sender: 'bot',\r\n            text: `Uploading **${file.name}**... Please wait.`,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, tempMessage]);\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/upload', {\r\n                method: 'POST',\r\n                // CRITICAL FIX: Authorization header included for file upload\r\n                headers: {\r\n                    'Authorization': `Bearer ${sessionToken}`, \r\n                    // DO NOT set Content-Type: multipart/form-data. Browser handles it.\r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            // Remove the temporary message\r\n            setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\r\n\r\n            if (!response.ok) {\r\n                // If authentication fails (401), the error message comes back as JSON\r\n                throw new Error(data.error || 'File upload failed with an unknown error.');\r\n            }\r\n\r\n            // Add the final success message from the backend (data.message)\r\n            const successMessage = {\r\n                sender: 'bot',\r\n                text: data.message,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, successMessage]);\r\n\r\n        } catch (err) {\r\n            console.error(\"Upload Error:\", err);\r\n            \r\n            // Remove the temporary message\r\n            setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\r\n            \r\n            const errorMessage = {\r\n                sender: 'bot',\r\n                text: `Error uploading file: ${err.message}`,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    // --- Render ---\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-card\">\r\n                <header className=\"chat-header\">\r\n                    <h1 className=\"text-xl font-bold\">TimeSheet AI Chat ({user})</h1>\r\n                    <button onClick={onSignOut} className=\"sign-out-button\">Sign Out</button>\r\n                </header>\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        // Use ChatMessage component for better display\r\n                        <ChatMessage key={index} sender={msg.sender} text={msg.text} />\r\n                    ))}\r\n                </div>\r\n                <form onSubmit={handleSendMessage} className=\"chat-input-form\">\r\n                    {/* CRITICAL: Integrate the UploadButton */}\r\n                    <UploadButton onFileUpload={handleFileUpload} disabled={isLoading} /> \r\n                    \r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={isLoading ? \"Please wait...\" : \"Ask a question about the timesheet...\"}\r\n                        className=\"chat-input\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        disabled={isLoading}\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\" disabled={isLoading}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"send-icon\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\" />\r\n                        </svg>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}