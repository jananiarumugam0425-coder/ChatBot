{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\ChatPage\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatPage.css';\nimport UploadButton from '../UploadButton/UploadButton'; // Assuming you have this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  user,\n  sessionToken,\n  onSignOut\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  // Scroll to the bottom whenever messages update\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      try {\n        // FIX: Use Authorization header instead of URL query parameter\n        const response = await fetch('http://127.0.0.1:5000/chat_history', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${sessionToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch chat history.');\n        }\n        const data = await response.json();\n        setMessages(data.history || []);\n      } catch (err) {\n        console.error(\"Failed to fetch chat history:\", err);\n        // Optionally sign out the user if the token is permanently invalid\n        // onSignOut(); \n      }\n    };\n    fetchChatHistory();\n    // Optional: Polling for history can be removed if performance is an issue\n    const intervalId = setInterval(fetchChatHistory, 5000);\n    return () => clearInterval(intervalId);\n  }, [sessionToken, onSignOut]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const messageText = input.trim();\n    if (!messageText || isLoading) return;\n    const newMessage = {\n      sender: 'user',\n      text: messageText,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // FIX: Use Authorization header for chat route\n          'Authorization': `Bearer ${sessionToken}`\n        },\n        body: JSON.stringify({\n          query: messageText\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get bot response.');\n      }\n\n      // Bot response is already pushed to history by the backend (but we update locally immediately for better UX)\n      const botMessage = {\n        sender: 'bot',\n        text: data.answer,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (err) {\n      console.error(\"Chat error:\", err);\n      // Add error message to chat\n      const errorMessage = {\n        sender: 'bot',\n        text: `Sorry, there was an error processing your request: ${err.message}`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // FIX: Updated file upload logic\n  const handleFileUpload = async file => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setMessages(prevMessages => [...prevMessages, {\n      sender: 'bot',\n      text: `Uploading file: ${file.name}... Please wait.`,\n      timestamp: new Date().toISOString()\n    }]);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        headers: {\n          // FIX: CRITICAL - Add the Authorization header for upload\n          'Authorization': `Bearer ${sessionToken}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'File upload failed.');\n      }\n\n      // The backend returns the bot's success message in 'message' field\n      const botMessage = {\n        sender: 'bot',\n        text: data.message,\n        timestamp: new Date().toISOString()\n      };\n      // Replace the \"Uploading...\" message with the success message\n      setMessages(prevMessages => {\n        const updated = prevMessages.slice(0, -1);\n        return [...updated, botMessage];\n      });\n    } catch (err) {\n      console.error(\"Upload error:\", err.message);\n      // Replace the \"Uploading...\" message with the error message\n      setMessages(prevMessages => {\n        const updated = prevMessages.slice(0, -1);\n        return [...updated, {\n          sender: 'bot',\n          text: `Error uploading file: ${err.message}`,\n          timestamp: new Date().toISOString()\n        }];\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"chat-title\",\n          children: \"Timesheet Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-info\",\n            children: [\"Logged in as: \", user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSignOut,\n            className: \"sign-out-button\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n          onFileUpload: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"flex flex-1 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ask a question about the timesheet...\",\n            className: \"chat-input flex-1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !input.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              strokeWidth: \"2\",\n              stroke: \"currentColor\",\n              className: \"send-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: \"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"L2NTAjuWBz1ERzYxxD5UsnNc0XY=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","UploadButton","jsxDEV","_jsxDEV","ChatPage","user","sessionToken","onSignOut","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","fetchChatHistory","response","fetch","method","headers","ok","Error","data","json","history","err","console","error","intervalId","setInterval","clearInterval","handleSendMessage","e","preventDefault","messageText","trim","newMessage","sender","text","timestamp","Date","toISOString","prevMessages","body","JSON","stringify","query","botMessage","answer","errorMessage","message","handleFileUpload","file","formData","FormData","append","name","updated","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","ref","onFileUpload","onSubmit","type","placeholder","value","onChange","target","disabled","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ChatPage.css';\r\nimport UploadButton from '../UploadButton/UploadButton'; // Assuming you have this component\r\n\r\nconst ChatPage = ({ user, sessionToken, onSignOut }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    // Scroll to the bottom whenever messages update\r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        const fetchChatHistory = async () => {\r\n            try {\r\n                // FIX: Use Authorization header instead of URL query parameter\r\n                const response = await fetch('http://127.0.0.1:5000/chat_history', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${sessionToken}`,\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch chat history.');\r\n                }\r\n                const data = await response.json();\r\n                setMessages(data.history || []);\r\n            } catch (err) {\r\n                console.error(\"Failed to fetch chat history:\", err);\r\n                // Optionally sign out the user if the token is permanently invalid\r\n                // onSignOut(); \r\n            }\r\n        };\r\n\r\n        fetchChatHistory();\r\n        // Optional: Polling for history can be removed if performance is an issue\r\n        const intervalId = setInterval(fetchChatHistory, 5000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [sessionToken, onSignOut]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const messageText = input.trim();\r\n        if (!messageText || isLoading) return;\r\n\r\n        const newMessage = {\r\n            sender: 'user',\r\n            text: messageText,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        setMessages(prevMessages => [...prevMessages, newMessage]);\r\n        setInput('');\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    // FIX: Use Authorization header for chat route\r\n                    'Authorization': `Bearer ${sessionToken}`, \r\n                },\r\n                body: JSON.stringify({ query: messageText }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to get bot response.');\r\n            }\r\n            \r\n            // Bot response is already pushed to history by the backend (but we update locally immediately for better UX)\r\n            const botMessage = {\r\n                sender: 'bot',\r\n                text: data.answer,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n        } catch (err) {\r\n            console.error(\"Chat error:\", err);\r\n            // Add error message to chat\r\n            const errorMessage = {\r\n                sender: 'bot',\r\n                text: `Sorry, there was an error processing your request: ${err.message}`,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // FIX: Updated file upload logic\r\n    const handleFileUpload = async (file) => {\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        setMessages(prevMessages => [...prevMessages, {\r\n            sender: 'bot',\r\n            text: `Uploading file: ${file.name}... Please wait.`,\r\n            timestamp: new Date().toISOString()\r\n        }]);\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/upload', {\r\n                method: 'POST',\r\n                headers: {\r\n                    // FIX: CRITICAL - Add the Authorization header for upload\r\n                    'Authorization': `Bearer ${sessionToken}`, \r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'File upload failed.');\r\n            }\r\n\r\n            // The backend returns the bot's success message in 'message' field\r\n            const botMessage = {\r\n                sender: 'bot',\r\n                text: data.message, \r\n                timestamp: new Date().toISOString()\r\n            };\r\n            // Replace the \"Uploading...\" message with the success message\r\n            setMessages(prevMessages => {\r\n                const updated = prevMessages.slice(0, -1);\r\n                return [...updated, botMessage];\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error(\"Upload error:\", err.message);\r\n            // Replace the \"Uploading...\" message with the error message\r\n            setMessages(prevMessages => {\r\n                const updated = prevMessages.slice(0, -1);\r\n                return [...updated, {\r\n                    sender: 'bot',\r\n                    text: `Error uploading file: ${err.message}`,\r\n                    timestamp: new Date().toISOString()\r\n                }];\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-card\">\r\n                <header className=\"chat-header\">\r\n                    <h1 className=\"chat-title\">Timesheet Chatbot</h1>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                        <span className=\"user-info\">Logged in as: {user}</span>\r\n                        <button onClick={onSignOut} className=\"sign-out-button\">Sign Out</button>\r\n                    </div>\r\n                </header>\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`}>\r\n                            <p className=\"message-text\">{msg.text}</p>\r\n                        </div>\r\n                    ))}\r\n                    {isLoading && (\r\n                        <div className=\"message bot-message\">\r\n                            <p className=\"message-text\">Thinking...</p>\r\n                        </div>\r\n                    )}\r\n                    <div ref={chatEndRef} />\r\n                </div>\r\n                \r\n                <div className=\"chat-input-form\">\r\n                    <UploadButton onFileUpload={handleFileUpload} />\r\n                    <form onSubmit={handleSendMessage} className=\"flex flex-1 gap-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Ask a question about the timesheet...\"\r\n                            className=\"chat-input flex-1\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            disabled={isLoading}\r\n                        />\r\n                        <button type=\"submit\" className=\"send-button\" disabled={!input.trim() || isLoading}>\r\n                            {/* SVG for Send Icon */}\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"send-icon\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\" />\r\n                            </svg>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}