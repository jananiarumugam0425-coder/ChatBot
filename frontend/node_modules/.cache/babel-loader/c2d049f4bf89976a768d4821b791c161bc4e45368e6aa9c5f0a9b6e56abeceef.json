{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\ChatPage\\\\ChatPage.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatInput from '../ChatInput/ChatInput';\nimport ChatMessage from '../ChatMessage/ChatMessage';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://127.0.0.1:5000/review\";\nconst ChatPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSendMessage = async query => {\n    _s();\n    if (!query) return;\n    const newUserMessage = {\n      sender: 'user',\n      text: query\n    };\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setLoading(true);\n    useEffect(() => {\n      console.log(\"ChatPage mounted\");\n    }, []);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const newBotMessage = {\n        sender: 'bot',\n        text: data.answer\n      };\n      setMessages(prevMessages => [...prevMessages, newBotMessage]);\n    } catch (error) {\n      console.error(\"Error fetching bot response:\", error);\n      const errorMessage = {\n        sender: 'bot',\n        text: \"Sorry, I couldn't get a response. Please try again.\"\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  _s(handleSendMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Timesheet Reviewer Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-online\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), \" Status: Online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            sender: msg.sender,\n            text: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: \"Bot is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          onSend: handleSendMessage,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s2(ChatPage, \"hq4AwCU/cjqbSZgH8tz5GrloLy8=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","ChatInput","ChatMessage","jsxDEV","_jsxDEV","API_URL","ChatPage","_s2","_s","$RefreshSig$","messages","setMessages","loading","setLoading","handleSendMessage","query","newUserMessage","sender","text","prevMessages","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","newBotMessage","answer","error","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSend","disabled","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ChatInput from '../ChatInput/ChatInput';\r\nimport ChatMessage from '../ChatMessage/ChatMessage';\r\nimport './ChatPage.css';\r\n\r\nconst API_URL = \"http://127.0.0.1:5000/review\";\r\n\r\nconst ChatPage = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSendMessage = async (query) => {\r\n        if (!query) return;\r\n\r\n        const newUserMessage = { sender: 'user', text: query };\r\n        setMessages(prevMessages => [...prevMessages, newUserMessage]);\r\n        setLoading(true);\r\n\r\n        useEffect(() => {\r\n    console.log(\"ChatPage mounted\");\r\n  }, []);\r\n\r\n        try {\r\n            const response = await fetch(API_URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ query }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            const newBotMessage = { sender: 'bot', text: data.answer };\r\n            setMessages(prevMessages => [...prevMessages, newBotMessage]);\r\n        } catch (error) {\r\n            console.error(\"Error fetching bot response:\", error);\r\n            const errorMessage = { sender: 'bot', text: \"Sorry, I couldn't get a response. Please try again.\" };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"main-content\">\r\n                <header className=\"chat-header\">\r\n                    <h2>Timesheet Reviewer Bot</h2>\r\n                    <span className=\"status-online\">\r\n                        <span className=\"status-dot\"></span> Status: Online\r\n                    </span>\r\n                </header>\r\n                <div className=\"chat-area\">\r\n                    <div className=\"chat-messages\">\r\n                        {messages.map((msg, index) => (\r\n                            <ChatMessage key={index} sender={msg.sender} text={msg.text} />\r\n                        ))}\r\n                        {loading && <div className=\"loading-message\">Bot is typing...</div>}\r\n                    </div>\r\n                    <ChatInput onSend={handleSendMessage} disabled={loading} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}