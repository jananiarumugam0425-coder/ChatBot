{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\ChatPage\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatPage.css';\nimport UploadButton from '../UploadButton/UploadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  user,\n  sessionToken,\n  onSignOut\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  // Helper component for message rendering\n  const MessageComponent = ({\n    msg\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message-text\",\n      children: msg.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // --- 1. History Fetch ---\n  useEffect(() => {\n    if (!sessionToken) return;\n    const fetchChatHistory = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/chat_history', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${sessionToken}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            alert(\"Session expired. Please log in.\");\n            onSignOut();\n          }\n          throw new Error('Failed to fetch chat history.');\n        }\n        const data = await response.json();\n        setMessages(data.history || []);\n      } catch (err) {\n        console.error(\"Failed to fetch chat history:\", err);\n      }\n    };\n    fetchChatHistory();\n    const intervalId = setInterval(fetchChatHistory, 5000);\n    return () => clearInterval(intervalId);\n  }, [sessionToken, onSignOut]);\n\n  // --- 2. Handle Chat Message ---\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const query = input.trim();\n    if (!query || isLoading) return;\n    setIsLoading(true);\n    const newMessage = {\n      sender: 'user',\n      text: query,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput('');\n    try {\n      const response = await fetch('http://127.0.0.1:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${sessionToken}`\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get bot response.');\n      }\n      const botMessage = {\n        sender: 'bot',\n        text: data.answer,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (err) {\n      console.error(\"Chat error:\", err);\n      const errorMessage = {\n        sender: 'bot',\n        text: `Sorry, there was an error processing your request: ${err.message}`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- 3. Handle File Upload ---\n  const handleFileUpload = async file => {\n    if (!file || isLoading) return;\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    const tempMessage = {\n      sender: 'bot',\n      text: `Uploading **${file.name}**... Please wait.`,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prevMessages => [...prevMessages, tempMessage]);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${sessionToken}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\n      if (!response.ok) {\n        throw new Error(data.error || 'File upload failed with unknown error.');\n      }\n      const botMessage = {\n        sender: 'bot',\n        text: data.message,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (err) {\n      console.error(\"Upload error:\", err.message);\n      setMessages(prevMessages => {\n        const updated = prevMessages.filter(msg => msg !== tempMessage);\n        return [...updated, {\n          sender: 'bot',\n          text: `Error uploading file: ${err.message}`,\n          timestamp: new Date().toISOString()\n        }];\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"chat-title\",\n          children: \"Timesheet Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-info\",\n            children: [\"Logged in as: **\", user, \"**\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSignOut,\n            className: \"sign-out-button\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageComponent, {\n          msg: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(MessageComponent, {\n          msg: {\n            sender: 'bot',\n            text: \"Thinking or processing data...\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n          onFileUpload: handleFileUpload,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"flex flex-1 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: isLoading ? \"Processing, please wait...\" : \"Ask a question about the timesheet...\",\n            className: \"chat-input flex-1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !input.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              strokeWidth: \"2\",\n              stroke: \"currentColor\",\n              className: \"send-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: \"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"L2NTAjuWBz1ERzYxxD5UsnNc0XY=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","UploadButton","jsxDEV","_jsxDEV","ChatPage","user","sessionToken","onSignOut","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","chatEndRef","MessageComponent","msg","className","sender","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_chatEndRef$current","current","scrollIntoView","behavior","fetchChatHistory","response","fetch","method","headers","ok","status","alert","Error","data","json","history","err","console","error","intervalId","setInterval","clearInterval","handleSendMessage","e","preventDefault","query","trim","newMessage","timestamp","Date","toISOString","prevMessages","body","JSON","stringify","botMessage","answer","errorMessage","message","handleFileUpload","file","formData","FormData","append","tempMessage","name","filter","updated","onClick","map","index","ref","onFileUpload","disabled","onSubmit","type","placeholder","value","onChange","target","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ChatPage.css';\r\nimport UploadButton from '../UploadButton/UploadButton'; \r\n\r\nconst ChatPage = ({ user, sessionToken, onSignOut }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    // Helper component for message rendering\r\n    const MessageComponent = ({ msg }) => (\r\n        <div className={`message ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`}>\r\n            <p className=\"message-text\">{msg.text}</p>\r\n        </div>\r\n    );\r\n    \r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    // --- 1. History Fetch ---\r\n    useEffect(() => {\r\n        if (!sessionToken) return;\r\n\r\n        const fetchChatHistory = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:5000/chat_history', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${sessionToken}`,\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    if (response.status === 401) {\r\n                        alert(\"Session expired. Please log in.\");\r\n                        onSignOut();\r\n                    }\r\n                    throw new Error('Failed to fetch chat history.');\r\n                }\r\n                const data = await response.json();\r\n                setMessages(data.history || []);\r\n            } catch (err) {\r\n                console.error(\"Failed to fetch chat history:\", err);\r\n            }\r\n        };\r\n\r\n        fetchChatHistory();\r\n        \r\n        const intervalId = setInterval(fetchChatHistory, 5000); \r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [sessionToken, onSignOut]);\r\n\r\n    // --- 2. Handle Chat Message ---\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const query = input.trim();\r\n        if (!query || isLoading) return;\r\n\r\n        setIsLoading(true);\r\n        const newMessage = {\r\n            sender: 'user',\r\n            text: query,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, newMessage]);\r\n        setInput(''); \r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${sessionToken}`,\r\n                },\r\n                body: JSON.stringify({ query: query }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to get bot response.');\r\n            }\r\n            \r\n            const botMessage = {\r\n                sender: 'bot',\r\n                text: data.answer,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n        } catch (err) {\r\n            console.error(\"Chat error:\", err);\r\n            const errorMessage = {\r\n                sender: 'bot',\r\n                text: `Sorry, there was an error processing your request: ${err.message}`,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- 3. Handle File Upload ---\r\n    const handleFileUpload = async (file) => {\r\n        if (!file || isLoading) return;\r\n\r\n        setIsLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        const tempMessage = {\r\n            sender: 'bot',\r\n            text: `Uploading **${file.name}**... Please wait.`,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, tempMessage]);\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/upload', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${sessionToken}`, \r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            setMessages(prevMessages => prevMessages.filter(msg => msg !== tempMessage));\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'File upload failed with unknown error.');\r\n            }\r\n\r\n            const botMessage = {\r\n                sender: 'bot',\r\n                text: data.message,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n        } catch (err) {\r\n            console.error(\"Upload error:\", err.message);\r\n            \r\n            setMessages(prevMessages => {\r\n                const updated = prevMessages.filter(msg => msg !== tempMessage);\r\n                return [...updated, {\r\n                    sender: 'bot',\r\n                    text: `Error uploading file: ${err.message}`,\r\n                    timestamp: new Date().toISOString()\r\n                }];\r\n            });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Render ---\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-card\">\r\n                <header className=\"chat-header\">\r\n                    <h1 className=\"chat-title\">Timesheet Chatbot</h1>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                        <span className=\"user-info\">Logged in as: **{user}**</span>\r\n                        <button onClick={onSignOut} className=\"sign-out-button\">Sign Out</button>\r\n                    </div>\r\n                </header>\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <MessageComponent key={index} msg={msg} />\r\n                    ))}\r\n                    {isLoading && (\r\n                        <MessageComponent msg={{ sender: 'bot', text: \"Thinking or processing data...\" }} />\r\n                    )}\r\n                    <div ref={chatEndRef} />\r\n                </div>\r\n                \r\n                <div className=\"chat-input-form\">\r\n                    <UploadButton onFileUpload={handleFileUpload} disabled={isLoading} />\r\n                    <form onSubmit={handleSendMessage} className=\"flex flex-1 gap-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder={isLoading ? \"Processing, please wait...\" : \"Ask a question about the timesheet...\"}\r\n                            className=\"chat-input flex-1\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            disabled={isLoading}\r\n                        />\r\n                        <button type=\"submit\" className=\"send-button\" disabled={!input.trim() || isLoading}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"send-icon\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\" />\r\n                            </svg>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}