{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, onAuthStateChanged, signInAnonymously } from 'firebase/auth';\nimport { getFirestore, doc, setDoc, collection, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport AuthForm from './AuthForm';\nimport ChatPage from './ChatPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLogin, setIsLogin] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const __app_id = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n  const __firebase_config = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\n  const __initial_auth_token = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n  useEffect(() => {\n    if (__firebase_config && Object.keys(__firebase_config).length > 0) {\n      try {\n        const app = initializeApp(__firebase_config);\n        const authInstance = getAuth(app);\n        const dbInstance = getFirestore(app);\n        setAuth(authInstance);\n        setDb(dbInstance);\n        const unsubscribe = onAuthStateChanged(authInstance, async authUser => {\n          if (authUser) {\n            setUser(authUser);\n            setUserId(authUser.uid);\n          } else {\n            setUser(null);\n            setUserId(null);\n            setMessages([]);\n          }\n        });\n        if (__initial_auth_token) {\n          signInWithCustomToken(authInstance, __initial_auth_token).catch(error => {\n            console.error(\"Error signing in with custom token:\", error);\n            signInAnonymously(authInstance).catch(anonError => {\n              console.error(\"Error signing in anonymously:\", anonError);\n            });\n          });\n        } else {\n          signInAnonymously(authInstance).catch(error => {\n            console.error(\"Error signing in anonymously:\", error);\n          });\n        }\n        return () => unsubscribe();\n      } catch (error) {\n        console.error(\"Firebase initialization failed:\", error);\n      }\n    }\n  }, [__firebase_config, __initial_auth_token]);\n  useEffect(() => {\n    if (db && userId) {\n      const chatHistoryQuery = query(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`), orderBy('timestamp'));\n      const unsubscribe = onSnapshot(chatHistoryQuery, snapshot => {\n        const history = snapshot.docs.map(doc => doc.data());\n        setMessages(history);\n      }, error => {\n        console.error(\"Error fetching real-time chat history:\", error);\n      });\n      return () => unsubscribe();\n    }\n  }, [db, userId]);\n  const handleAuthenticate = async (username, password, isLogin) => {\n    // Here you would typically call a backend endpoint to handle login/signup\n    // For this example, we'll just simulate success.\n    console.log(`Authenticating user: ${username}, isLogin: ${isLogin}`);\n    // Simulate a successful login\n    setUser({\n      uid: 'simulated-user-id'\n    });\n    setUserId('simulated-user-id');\n  };\n  const handleSendMessage = async query => {\n    if (!query || !db || !userId) return;\n    const newUserMessage = {\n      sender: 'user',\n      text: query,\n      timestamp: Date.now()\n    };\n    setLoading(true);\n    try {\n      // Save user message to Firestore\n      await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), newUserMessage);\n\n      // Call the backend API\n      const API_URL = \"http://127.0.0.1:5000/review\";\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const newBotMessage = {\n        sender: 'bot',\n        text: data.answer,\n        timestamp: Date.now()\n      };\n\n      // Save bot message to Firestore\n      await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), newBotMessage);\n    } catch (error) {\n      console.error(\"Error fetching bot response or saving to DB:\", error);\n      const errorMessage = {\n        sender: 'bot',\n        text: \"Sorry, I couldn't get a response. Please try again.\",\n        timestamp: Date.now()\n      };\n      // Save error message to Firestore\n      await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleToggleAuthMode = mode => {\n    setIsLogin(mode);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(AuthForm, {\n        onAuthenticate: handleAuthenticate,\n        isLogin: isLogin,\n        onToggleAuthMode: handleToggleAuthMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4\",\n      children: /*#__PURE__*/_jsxDEV(ChatPage, {\n        messages: messages,\n        setMessages: setMessages,\n        handleSendMessage: handleSendMessage,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"CgY+iwRV6CsGUnLHfwcB5vy0liM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getAuth","signInWithCustomToken","onAuthStateChanged","signInAnonymously","getFirestore","doc","setDoc","collection","query","orderBy","onSnapshot","AuthForm","ChatPage","jsxDEV","_jsxDEV","App","_s","user","setUser","isLogin","setIsLogin","messages","setMessages","loading","setLoading","db","setDb","auth","setAuth","userId","setUserId","__app_id","__firebase_config","JSON","parse","__initial_auth_token","Object","keys","length","app","authInstance","dbInstance","unsubscribe","authUser","uid","catch","error","console","anonError","chatHistoryQuery","snapshot","history","docs","map","data","handleAuthenticate","username","password","log","handleSendMessage","newUserMessage","sender","text","timestamp","Date","now","API_URL","response","fetch","method","headers","body","stringify","json","newBotMessage","answer","errorMessage","handleToggleAuthMode","mode","className","children","onAuthenticate","onToggleAuthMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n    getAuth,\r\n    signInWithCustomToken,\r\n    onAuthStateChanged,\r\n    signInAnonymously\r\n} from 'firebase/auth';\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    setDoc,\r\n    collection,\r\n    query,\r\n    orderBy,\r\n    onSnapshot\r\n} from 'firebase/firestore';\r\nimport AuthForm from './AuthForm';\r\nimport ChatPage from './ChatPage';\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [db, setDb] = useState(null);\r\n    const [auth, setAuth] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const __app_id = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\n    const __firebase_config = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\r\n    const __initial_auth_token = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n    useEffect(() => {\r\n        if (__firebase_config && Object.keys(__firebase_config).length > 0) {\r\n            try {\r\n                const app = initializeApp(__firebase_config);\r\n                const authInstance = getAuth(app);\r\n                const dbInstance = getFirestore(app);\r\n                setAuth(authInstance);\r\n                setDb(dbInstance);\r\n\r\n                const unsubscribe = onAuthStateChanged(authInstance, async (authUser) => {\r\n                    if (authUser) {\r\n                        setUser(authUser);\r\n                        setUserId(authUser.uid);\r\n                    } else {\r\n                        setUser(null);\r\n                        setUserId(null);\r\n                        setMessages([]);\r\n                    }\r\n                });\r\n\r\n                if (__initial_auth_token) {\r\n                    signInWithCustomToken(authInstance, __initial_auth_token).catch((error) => {\r\n                        console.error(\"Error signing in with custom token:\", error);\r\n                        signInAnonymously(authInstance).catch(anonError => {\r\n                            console.error(\"Error signing in anonymously:\", anonError);\r\n                        });\r\n                    });\r\n                } else {\r\n                    signInAnonymously(authInstance).catch(error => {\r\n                        console.error(\"Error signing in anonymously:\", error);\r\n                    });\r\n                }\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error(\"Firebase initialization failed:\", error);\r\n            }\r\n        }\r\n    }, [__firebase_config, __initial_auth_token]);\r\n\r\n    useEffect(() => {\r\n        if (db && userId) {\r\n            const chatHistoryQuery = query(\r\n                collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`),\r\n                orderBy('timestamp')\r\n            );\r\n\r\n            const unsubscribe = onSnapshot(chatHistoryQuery, (snapshot) => {\r\n                const history = snapshot.docs.map(doc => doc.data());\r\n                setMessages(history);\r\n            }, (error) => {\r\n                console.error(\"Error fetching real-time chat history:\", error);\r\n            });\r\n\r\n            return () => unsubscribe();\r\n        }\r\n    }, [db, userId]);\r\n\r\n\r\n    const handleAuthenticate = async (username, password, isLogin) => {\r\n        // Here you would typically call a backend endpoint to handle login/signup\r\n        // For this example, we'll just simulate success.\r\n        console.log(`Authenticating user: ${username}, isLogin: ${isLogin}`);\r\n        // Simulate a successful login\r\n        setUser({ uid: 'simulated-user-id' });\r\n        setUserId('simulated-user-id');\r\n    };\r\n\r\n    const handleSendMessage = async (query) => {\r\n        if (!query || !db || !userId) return;\r\n\r\n        const newUserMessage = { sender: 'user', text: query, timestamp: Date.now() };\r\n        setLoading(true);\r\n\r\n        try {\r\n            // Save user message to Firestore\r\n            await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), newUserMessage);\r\n            \r\n            // Call the backend API\r\n            const API_URL = \"http://127.0.0.1:5000/review\";\r\n            const response = await fetch(API_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ query }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            const newBotMessage = { sender: 'bot', text: data.answer, timestamp: Date.now() };\r\n            \r\n            // Save bot message to Firestore\r\n            await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), newBotMessage);\r\n        } catch (error) {\r\n            console.error(\"Error fetching bot response or saving to DB:\", error);\r\n            const errorMessage = { sender: 'bot', text: \"Sorry, I couldn't get a response. Please try again.\", timestamp: Date.now() };\r\n            // Save error message to Firestore\r\n            await setDoc(doc(collection(db, `/artifacts/${__app_id}/users/${userId}/chat_history`)), errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleToggleAuthMode = (mode) => {\r\n      setIsLogin(mode);\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div className=\"flex justify-center items-center h-screen bg-gray-900\">\r\n                <AuthForm onAuthenticate={handleAuthenticate} isLogin={isLogin} onToggleAuthMode={handleToggleAuthMode} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-screen bg-gray-900\">\r\n            <div className=\"flex-grow p-4\">\r\n                <ChatPage\r\n                    messages={messages}\r\n                    setMessages={setMessages}\r\n                    handleSendMessage={handleSendMessage}\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}