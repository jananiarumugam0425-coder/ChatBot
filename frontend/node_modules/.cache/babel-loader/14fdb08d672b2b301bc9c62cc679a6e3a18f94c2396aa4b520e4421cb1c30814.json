{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // New state variables for additional sign-up fields\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [error, setError] = useState('');\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\n\n    // Prepare the body with required fields. Add extra fields only for sign up.\n    const body = isSignUp ? JSON.stringify({\n      username,\n      password,\n      full_name: fullName,\n      email\n    }) : JSON.stringify({\n      username,\n      password\n    });\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: body // Use the prepared body\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Authentication failed.');\n      }\n      if (isSignUp) {\n        setError('Sign-up successful! Please log in now.');\n        // Clear all fields on successful sign-up\n        setUsername('');\n        setPassword('');\n        setFullName('');\n        setEmail('');\n        setIsSignUp(false);\n      } else if (data.session_token) {\n        // Successful login\n        onLogin(username, data.session_token);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleForgotPassword = () => {\n    // Placeholder logic for Forgot Password\n    setError('This feature is not yet fully implemented. Please contact support.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAuth,\n        className: \"login-form\",\n        autoComplete: \"off\",\n        children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Full Name\",\n            className: \"login-input\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: \"login-input\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          className: \"login-input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"login-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `login-error ${error.includes('successful') ? 'login-success' : ''}`,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: isSignUp ? 'Sign Up' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), !isSignUp && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleForgotPassword,\n          className: \"forgot-password-button\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsSignUp(!isSignUp);\n          setError('');\n          setUsername('');\n          setPassword('');\n          setFullName('');\n          setEmail('');\n        },\n        className: \"toggle-auth-button\",\n        children: isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"T3icNGs3pCoEcaszBQaWf7pFiso=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onLogin","_s","username","setUsername","password","setPassword","fullName","setFullName","email","setEmail","isSignUp","setIsSignUp","error","setError","handleAuth","e","preventDefault","url","body","JSON","stringify","full_name","response","fetch","method","headers","data","json","ok","Error","session_token","err","message","handleForgotPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","type","placeholder","value","onChange","target","required","includes","onClick","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // New state variables for additional sign-up fields\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    \r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleAuth = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\r\n\r\n        // Prepare the body with required fields. Add extra fields only for sign up.\r\n        const body = isSignUp \r\n            ? JSON.stringify({ username, password, full_name: fullName, email }) \r\n            : JSON.stringify({ username, password });\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: body, // Use the prepared body\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            if (isSignUp) {\r\n                setError('Sign-up successful! Please log in now.');\r\n                // Clear all fields on successful sign-up\r\n                setUsername('');\r\n                setPassword('');\r\n                setFullName(''); \r\n                setEmail('');\r\n                setIsSignUp(false);\r\n            } else if (data.session_token) {\r\n                // Successful login\r\n                onLogin(username, data.session_token);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleForgotPassword = () => {\r\n        // Placeholder logic for Forgot Password\r\n        setError('This feature is not yet fully implemented. Please contact support.');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <h2 className=\"login-title\">\r\n                    {isSignUp ? 'Sign Up' : 'Log In'}\r\n                </h2>\r\n                <form onSubmit={handleAuth} className=\"login-form\" autoComplete=\"off\">\r\n                    \r\n                    {/* Additional fields for Sign Up */}\r\n                    {isSignUp && (\r\n                        <>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Full Name\"\r\n                                className=\"login-input\"\r\n                                value={fullName}\r\n                                onChange={(e) => setFullName(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"login-input\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </>\r\n                    )}\r\n\r\n                    {/* Username and Password fields */}\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        className=\"login-input\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"login-input\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                    \r\n                    {error && <div className={`login-error ${error.includes('successful') ? 'login-success' : ''}`}>{error}</div>}\r\n                    \r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        {isSignUp ? 'Sign Up' : 'Log In'}\r\n                    </button>\r\n                    \r\n                    {/* Forgot Password Button (visible only on Login form) */}\r\n                    {!isSignUp && (\r\n                         <button type=\"button\" onClick={handleForgotPassword} className=\"forgot-password-button\">\r\n                            Forgot Password?\r\n                         </button>\r\n                    )}\r\n                </form>\r\n                \r\n                <button\r\n                    onClick={() => {\r\n                        setIsSignUp(!isSignUp);\r\n                        setError(''); \r\n                        setUsername('');\r\n                        setPassword('');\r\n                        setFullName('');\r\n                        setEmail('');\r\n                    }}\r\n                    className=\"toggle-auth-button\"\r\n                >\r\n                    {isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}