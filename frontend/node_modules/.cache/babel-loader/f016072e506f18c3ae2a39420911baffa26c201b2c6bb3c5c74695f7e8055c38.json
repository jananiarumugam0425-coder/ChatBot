{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [error, setError] = useState('');\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        // Handle authentication/signup errors\n        throw new Error(data.error || 'Authentication failed.');\n      }\n\n      // --- ðŸŽ¯ CORE CHANGE STARTS HERE ---\n      if (isSignUp) {\n        // 1. Success message for the user\n        setError('Sign-up successful! Please log in now.');\n\n        // 2. Clear the fields\n        setUsername('');\n        setPassword('');\n\n        // 3. Switch back to the Login form\n        setIsSignUp(false);\n      } else if (data.session_token) {\n        // Successful login\n        onLogin(username, data.session_token);\n      }\n      // --- ðŸŽ¯ CORE CHANGE ENDS HERE ---\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAuth,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          className: \"login-input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"login-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `login-error ${error.includes('successful') ? 'login-success' : ''}`,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: isSignUp ? 'Sign Up' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsSignUp(!isSignUp);\n          setError(''); // Clear error when toggling form\n          setUsername(''); // Clear fields when toggling form\n          setPassword('');\n        },\n        className: \"toggle-auth-button\",\n        children: isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"zqFav/IAcVCG0fmKQn95ptpJCVQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","isSignUp","setIsSignUp","error","setError","handleAuth","e","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","session_token","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","includes","onClick","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleAuth = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        const url = isSignUp ? 'http://127.0.0.1:5000/signup' : 'http://127.0.0.1:5000/login';\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                // Handle authentication/signup errors\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            // --- ðŸŽ¯ CORE CHANGE STARTS HERE ---\r\n            if (isSignUp) {\r\n                // 1. Success message for the user\r\n                setError('Sign-up successful! Please log in now.');\r\n                \r\n                // 2. Clear the fields\r\n                setUsername('');\r\n                setPassword('');\r\n                \r\n                // 3. Switch back to the Login form\r\n                setIsSignUp(false);\r\n                \r\n            } else if (data.session_token) {\r\n                // Successful login\r\n                onLogin(username, data.session_token);\r\n            }\r\n            // --- ðŸŽ¯ CORE CHANGE ENDS HERE ---\r\n            \r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <h2 className=\"login-title\">\r\n                    {isSignUp ? 'Sign Up' : 'Log In'}\r\n                </h2>\r\n                <form onSubmit={handleAuth} className=\"login-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        className=\"login-input\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"login-input\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    {error && <div className={`login-error ${error.includes('successful') ? 'login-success' : ''}`}>{error}</div>}\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        {isSignUp ? 'Sign Up' : 'Log In'}\r\n                    </button>\r\n                </form>\r\n                <button\r\n                    onClick={() => {\r\n                        setIsSignUp(!isSignUp);\r\n                        setError(''); // Clear error when toggling form\r\n                        setUsername(''); // Clear fields when toggling form\r\n                        setPassword('');\r\n                    }}\r\n                    className=\"toggle-auth-button\"\r\n                >\r\n                    {isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}