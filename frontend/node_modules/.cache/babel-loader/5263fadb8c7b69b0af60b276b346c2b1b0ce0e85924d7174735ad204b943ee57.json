{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000';\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  // State for login/signup credentials\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // State for all 5 sign-up fields\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [country, setCountry] = useState('');\n\n  // UI State\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [error, setError] = useState('');\n\n  // Clears fields when component mounts or authentication mode changes\n  useEffect(() => {\n    // ... (clearing logic remains the same)\n    setUsername('');\n    setPassword('');\n    setEmail('');\n    setFullName('');\n    setPhoneNumber('');\n    setCountry('');\n    setError('');\n  }, [isSignUp]);\n\n  // Helper function to determine CSS class for messages\n  const getErrorClass = () => {\n    if (!error) return '';\n    return error.includes('successful') ? 'login-success' : 'login-error';\n  };\n  const handleAuth = async e => {\n    e.preventDefault();\n    setError('');\n    const url = isSignUp ? `${API_BASE_URL}/signup` : `${API_BASE_URL}/login`;\n\n    // Body construction with all 7 fields for Sign Up\n    const body = isSignUp ? JSON.stringify({\n      username,\n      password,\n      full_name: fullName,\n      email,\n      phone_number: phoneNumber,\n      country: country\n    }) : JSON.stringify({\n      username,\n      password\n    });\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: body\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setPassword('');\n        throw new Error(data.error || 'Authentication failed.');\n      }\n      if (isSignUp) {\n        setError('Sign-up successful! Please log in now.');\n        setIsSignUp(false);\n      } else if (data.session_token) {\n        // *** CRITICAL FIX: Ensure the token is passed up ***\n        onLogin(username, data.session_token);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleForgotPassword = () => {\n    // Placeholder implementation\n    setError('Password reset is not enabled for this prototype.');\n    setTimeout(() => setError(''), 5000);\n  };\n  const handleToggleAuth = () => {\n    setIsSignUp(!isSignUp);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAuth,\n        className: \"login-form\",\n        autoComplete: \"off\",\n        children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Full Name\",\n            className: \"login-input\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true,\n            autoComplete: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: \"login-input\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            placeholder: \"Phone Number\",\n            className: \"login-input\",\n            value: phoneNumber,\n            onChange: e => setPhoneNumber(e.target.value),\n            required: true,\n            autoComplete: \"tel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Country\",\n            className: \"login-input\",\n            value: country,\n            onChange: e => setCountry(e.target.value),\n            required: true,\n            autoComplete: \"country-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          className: \"login-input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"login-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), !isSignUp && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleForgotPassword,\n          className: \"forgot-password-button\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 26\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getErrorClass(),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\"\n          // Disable button if any required field is empty\n          ,\n          disabled: !username.trim() || !password.trim() || isSignUp && (!fullName.trim() || !email.trim() || !phoneNumber.trim() || !country.trim()),\n          children: isSignUp ? 'Sign Up' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleAuth,\n        className: \"toggle-auth-button\",\n        children: isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"2EB05E0UvaqECIl4rldUJvCX5KI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","Login","onLogin","_s","username","setUsername","password","setPassword","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","country","setCountry","isSignUp","setIsSignUp","error","setError","getErrorClass","includes","handleAuth","e","preventDefault","url","body","JSON","stringify","full_name","phone_number","response","fetch","method","headers","data","json","ok","Error","session_token","err","message","handleForgotPassword","setTimeout","handleToggleAuth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","type","placeholder","value","onChange","target","required","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:5000'; \r\n\r\nconst Login = ({ onLogin }) => {\r\n    // State for login/signup credentials\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    // State for all 5 sign-up fields\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState(''); \r\n    const [country, setCountry] = useState('');         \r\n    \r\n    // UI State\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // Clears fields when component mounts or authentication mode changes\r\n    useEffect(() => {\r\n        // ... (clearing logic remains the same)\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setFullName('');\r\n        setPhoneNumber(''); \r\n        setCountry('');     \r\n        setError('');\r\n    }, [isSignUp]); \r\n\r\n    // Helper function to determine CSS class for messages\r\n    const getErrorClass = () => {\r\n        if (!error) return '';\r\n        return error.includes('successful') ? 'login-success' : 'login-error';\r\n    }\r\n\r\n    const handleAuth = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        const url = isSignUp ? `${API_BASE_URL}/signup` : `${API_BASE_URL}/login`;\r\n\r\n        // Body construction with all 7 fields for Sign Up\r\n        const body = isSignUp \r\n            ? JSON.stringify({ \r\n                username, \r\n                password, \r\n                full_name: fullName, \r\n                email,\r\n                phone_number: phoneNumber,\r\n                country: country\r\n            }) \r\n            : JSON.stringify({ username, password });\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: body,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setPassword('');\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            if (isSignUp) {\r\n                setError('Sign-up successful! Please log in now.');\r\n                setIsSignUp(false);\r\n            } else if (data.session_token) {\r\n                // *** CRITICAL FIX: Ensure the token is passed up ***\r\n                onLogin(username, data.session_token); \r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleForgotPassword = () => {\r\n        // Placeholder implementation\r\n        setError('Password reset is not enabled for this prototype.');\r\n        setTimeout(() => setError(''), 5000); \r\n    };\r\n\r\n    const handleToggleAuth = () => {\r\n        setIsSignUp(!isSignUp);\r\n        setError(''); \r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <h2 className=\"login-title\">\r\n                    {isSignUp ? 'Sign Up' : 'Log In'}\r\n                </h2>\r\n                <form onSubmit={handleAuth} className=\"login-form\" autoComplete=\"off\">\r\n                    \r\n                    {/* --- Sign Up Specific Fields (NEW) --- */}\r\n                    {isSignUp && (\r\n                        <>\r\n                            <input type=\"text\" placeholder=\"Full Name\" className=\"login-input\" value={fullName} onChange={(e) => setFullName(e.target.value)} required autoComplete=\"name\" />\r\n                            <input type=\"email\" placeholder=\"Email\" className=\"login-input\" value={email} onChange={(e) => setEmail(e.target.value)} required autoComplete=\"email\" />\r\n                            <input type=\"tel\" placeholder=\"Phone Number\" className=\"login-input\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} required autoComplete=\"tel\" />\r\n                            <input type=\"text\" placeholder=\"Country\" className=\"login-input\" value={country} onChange={(e) => setCountry(e.target.value)} required autoComplete=\"country-name\" />\r\n                        </>\r\n                    )}\r\n\r\n                    {/* --- Common Fields --- */}\r\n                    <input type=\"text\" placeholder=\"Username\" className=\"login-input\" value={username} onChange={(e) => setUsername(e.target.value)} required autoComplete=\"off\" />\r\n                    <input type=\"password\" placeholder=\"Password\" className=\"login-input\" value={password} onChange={(e) => setPassword(e.target.value)} required autoComplete=\"new-password\" />\r\n                    \r\n                    {!isSignUp && (\r\n                         <button type=\"button\" onClick={handleForgotPassword} className=\"forgot-password-button\">\r\n                            Forgot Password?\r\n                         </button>\r\n                    )}\r\n                    \r\n                    {error && <div className={getErrorClass()}>{error}</div>}\r\n                    \r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"login-button\"\r\n                        // Disable button if any required field is empty\r\n                        disabled={!username.trim() || !password.trim() || \r\n                            (isSignUp && (!fullName.trim() || !email.trim() || !phoneNumber.trim() || !country.trim()))\r\n                        }\r\n                    >\r\n                        {isSignUp ? 'Sign Up' : 'Log In'}\r\n                    </button>\r\n                    \r\n                </form>\r\n                \r\n                <button\r\n                    onClick={handleToggleAuth}\r\n                    className=\"toggle-auth-button\"\r\n                >\r\n                    {isSignUp ? 'Already have an account? Log In' : 'Need an account? Sign Up'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}