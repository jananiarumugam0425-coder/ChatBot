{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Timesheet chatbot\\\\frontend\\\\src\\\\components\\\\ChatMessage\\\\ChatMessage.jsx\";\nimport React from 'react';\nimport './ChatMessage.css'; // Ensure you are importing the CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  sender,\n  text\n}) => {\n  // Note: The Tailwind/Inline classes here are for quick styling, \n  // but the ChatMessage.css file is a better long-term solution.\n  // I've kept the inline styling strong to match the visual.\n\n  const baseStyle = \"p-3 rounded-xl max-w-[75%] break-words shadow-md text-lg\";\n  const userStyle = \"bg-blue-600 text-white self-end rounded-br-sm\"; // User bubbles align right, blue\n  const botStyle = \"bg-gray-600 text-slate-200 self-start rounded-tl-sm\"; // Bot bubbles align left, dark gray\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${baseStyle} ${sender === 'user' ? userStyle : botStyle}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatMessage","sender","text","baseStyle","userStyle","botStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Employee Timesheet chatbot/frontend/src/components/ChatMessage/ChatMessage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './ChatMessage.css'; // Ensure you are importing the CSS\r\n\r\nconst ChatMessage = ({ sender, text }) => {\r\n    // Note: The Tailwind/Inline classes here are for quick styling, \r\n    // but the ChatMessage.css file is a better long-term solution.\r\n    // I've kept the inline styling strong to match the visual.\r\n\r\n    const baseStyle = \"p-3 rounded-xl max-w-[75%] break-words shadow-md text-lg\";\r\n    \r\n    const userStyle = \"bg-blue-600 text-white self-end rounded-br-sm\"; // User bubbles align right, blue\r\n    const botStyle = \"bg-gray-600 text-slate-200 self-start rounded-tl-sm\"; // Bot bubbles align left, dark gray\r\n\r\n    return (\r\n        <div className={`${baseStyle} ${sender === 'user' ? userStyle : botStyle}`}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatMessage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EACtC;EACA;EACA;;EAEA,MAAMC,SAAS,GAAG,0DAA0D;EAE5E,MAAMC,SAAS,GAAG,+CAA+C,CAAC,CAAC;EACnE,MAAMC,QAAQ,GAAG,qDAAqD,CAAC,CAAC;;EAExE,oBACIN,OAAA;IAAKO,SAAS,EAAE,GAAGH,SAAS,IAAIF,MAAM,KAAK,MAAM,GAAGG,SAAS,GAAGC,QAAQ,EAAG;IAAAE,QAAA,EACtEL;EAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACC,EAAA,GAfIZ,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}